{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/mat.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<button mat-raised-button color=\\\"primary\\\" (click)=\\\"hello()\\\">Hello</button>\\n<div>{{message}}</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ui';\n  private headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n  message = '';\n\n  constructor(private http: HttpClient) { }\n\n  hello() {\n    this.http.get<{message: string}>(`/hello`, {\n      headers: this.headers,\n      observe: 'body',\n      responseType: 'json'\n    }).pipe(\n      catchError(val => {\n        return of({message: 'oops... something is broken!'});\n      })\n    ).subscribe(data => this.message = data.message);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { MatModule } from './mat.module';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MatModule,\n    CommonModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport {\n  MatAutocompleteModule,\n  MatCardModule,\n  MatInputModule,\n  MatToolbarModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatIconModule,\n  MatMenuModule,\n  MatPaginatorModule,\n  MatTableModule,\n  MatSortModule,\n  MatListModule,\n  MatGridListModule,\n  MatCheckboxModule,\n  MatSelectModule,\n  MatRadioModule,\n  MatSlideToggleModule,\n  MatDialogModule,\n  MatTabsModule,\n  MatTooltipModule,\n  MatSidenavModule,\n  MatProgressSpinnerModule,\n  MatBadgeModule,\n  MatExpansionModule,\n  MatSnackBarModule,\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    MatAutocompleteModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatSortModule,\n    MatListModule,\n    MatGridListModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatSidenavModule,\n    MatProgressSpinnerModule,\n    MatBadgeModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n  ]\n})\nexport class MatModule { }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}